<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Monitoring on Learnings in IT</title>
    <link>https://sachinsu.github.io/tags/monitoring/</link>
    <description>Recent content in Monitoring on Learnings in IT</description>
    <image>
      <title>Learnings in IT</title>
      <url>https://sachinsu.github.io/images/papermod-cover.png</url>
      <link>https://sachinsu.github.io/images/papermod-cover.png</link>
    </image>
    <generator>Hugo -- 0.149.0</generator>
    <language>en</language>
    <copyright>Â©</copyright>
    <lastBuildDate>Sun, 05 Sep 2021 01:00:00 +0530</lastBuildDate>
    <atom:link href="https://sachinsu.github.io/tags/monitoring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Database Reliability Engineering - My Notes</title>
      <link>https://sachinsu.github.io/posts/dbre/</link>
      <pubDate>Sun, 05 Sep 2021 01:00:00 +0530</pubDate>
      <guid>https://sachinsu.github.io/posts/dbre/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I have been reading excellent &lt;a href=https://www.oreilly.com/library/view/database-reliability-engineering/9781491925935/
    
    target=_blank rel=&#34;noopener noreferrer&#34;
&gt;Database Reliability Engineering&lt;/a&gt; book and below are my notes from it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Key Incentive(s) for Automation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elimination of Toil - Toil is the kind of work tied to running a production service that tends to be manual, repetitive, automatable, tactical, devoid of enduring value, and that scales linearly as a service grows.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Important System Characteristics&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Latency&lt;/em&gt;, also known as response time, is a time-based measurement indicating how long it takes to receive a response from a request. It is best to measure this for end-to-end response from the customer rather than breaking it down component by component. This is customer-centric design and is crucial for any system that has customers, which is any system&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
