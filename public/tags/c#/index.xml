<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Learnings in IT</title>
    <link>https://sachinsu.github.io/tags/c#/</link>
    <description>Recent content in C# on Learnings in IT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 May 2022 01:00:00 +0530</lastBuildDate><atom:link href="https://sachinsu.github.io/tags/c#/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>URL Shortener in High Throughput Service</title>
      <link>https://sachinsu.github.io/posts/shortidgeneration/</link>
      <pubDate>Sun, 15 May 2022 01:00:00 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/shortidgeneration/</guid>
      <description>Background A Client has E-commerce Application consisting of services aimed at specific domains of business functionality it serves. One of these services is responsible for accepting the order, authenticating it and forwarding it for further processing in terms of inventory checks, payment and so on. For Authentication, this service sends SMS to Customer&amp;rsquo;s Mobile number (and e-mail id) and customer is supposed to confirm this order placement by means of entering Code received in it.</description>
    </item>
    
    <item>
      <title>Domain driven Design: Learnings</title>
      <link>https://sachinsu.github.io/posts/domain_driven_transcript_from_pluralsight/</link>
      <pubDate>Sat, 15 May 2021 01:00:00 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/domain_driven_transcript_from_pluralsight/</guid>
      <description>Course Overview Welcome to Pluralsight. My name is Julie Lerman, and this is Steve Smith. Together, we&amp;rsquo;d like to welcome you to our course, Domain‑Driven Design Fundamentals. Steve is a trainer and architect with NimblePros and spends a lot of time helping teams write better code, faster. And Julie is well known in the DDD community for helping reluctant teams embrace domain‑driven design. In this course, we give you a strong foundation for learning how to build applications and microservices using domain‑driven design.</description>
    </item>
    
    <item>
      <title>Upgrading API: Learnings</title>
      <link>https://sachinsu.github.io/posts/apiupgrade/</link>
      <pubDate>Sat, 15 May 2021 01:00:00 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/apiupgrade/</guid>
      <description>Introduction One of the design considerations stressed upon by Jeffrey richter about APIs (Read more here) is that &amp;ldquo;API is expected to be stable over long period of time&amp;rdquo;. Recently,for a .NET based project, we decided to upgrade some of the ASMX (legacy SOAP based approach) based APIs and were immediately reminded by Customer(s) to avoid any kind of impact on existing users.
This means that upgrade must be done keeping in mind,</description>
    </item>
    
    <item>
      <title>Is WebAssembly future of Web Development</title>
      <link>https://sachinsu.github.io/posts/webassembly/</link>
      <pubDate>Tue, 02 Jun 2020 10:25:04 +0530</pubDate>
      
      <guid>https://sachinsu.github.io/posts/webassembly/</guid>
      <description>Over the last many years, de-facto language of the Web (specifically front-end) has been Javascript (and variants like Typescript, ECMAScript versions and so on). The Web development has been revolving around HTML+CSS+Javascript trio. It all started with support for Javascript in browsers, followed by addition of XMLHTTP API, Rich DOM Manipulation Support in Javascript. To induce order and apply patterns to Javascript&amp;rsquo;s usage in browsers, numerous frameworks and libraries were introduced like React and Vue among others.</description>
    </item>
    
  </channel>
</rss>
